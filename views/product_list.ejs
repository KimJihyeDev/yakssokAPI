<!DOCTYPE html>
<html>

<head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>제품리스트</title>

    <link href="css/bootstrap.min.css" rel="stylesheet">
    <link href="font-awesome/css/font-awesome.css" rel="stylesheet">

    <link href="css/animate.css" rel="stylesheet">
    <link href="css/style.css" rel="stylesheet">
    <link rel="stylesheet" href="css/v-cloak.css">
    <style>
        /* 리스트가 길어졌을 때 footer 하단에 고정시키기 */
        html,
        body {
            margin: 0;
            padding: 0;
            height: 100%;
        }

        #wrapper {
            min-height: 100%;
            position: relative;
        }

        .content {
            padding-bottom: 0px;
        }

    </style>
</head>

<body>
    <div id="vm" class="content" v-cloak>
        <div id="wrapper">

            <%- include('navigation') %>

            <div id="page-wrapper" class="gray-bg">
                <%- include('header') %>
                <div class="row border-bottom" style="margin-top:20px;">
                    <nav class="navbar navbar-static-top gray-bg" role="navigation" style="margin-bottom: 0">
                        <div class="col-lg-12">
                            <div class="ibox float-e-margins">
                                <div class="ibox-title">
                                    <h5>제품 리스트</h5>
                                </div>
                                <div class="ibox-content text-center">
                                    <div class="table-responsive">
                                        <table class="table table-striped">
                                            <thead>
                                                <tr>
                                                    <th width="30%">등록번호</th>
                                                    <th width="40%" class="justify-content-center">제품명</th>
                                                    <th>등록날짜</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr v-for="(item, idx) in product">
                                                    <td>{{ item.id }}</td>
                                                    <td><a :href="`product_modify?id=${ item.id }`">{{ item.product_name }}</a></td>
                                                    <td>{{ item.createdAt }}</td>
                                                </tr>
                                            </tbody>
                                        </table>

                                        <!-- 페이징 처리 -->
                                        <nav class="pagination justify-content-center">
                                            <ul class="pagination">
                                            <li class="page-item">
                                                <a class="page-link" @click="go(1)">&lt;&lt;</a>
                                            </li>
                                            <li class="page-item" v-if="totalPage > pageBlock && pageCount != 1">
                                                <a class="page-link" tabindex="-1" @click="decreasePageCount">이전</a>
                                            </li>
                                            <li class="page-item" :class="{ active: currentPage == page}" v-for="page in this.totalPage"  @click="changePage(page)"
                                                    v-show="(page/pageBlock) > pageCount - 1 && (page/pageBlock) <= pageCount">
                                                <a class="page-link">{{ page }}</a>
                                            </li>
                                            <li class="page-item" v-if="totalPage > pageBlock">
                                                <a class="page-link" @click="incresePageCount">다음</a>
                                            </li>
                                            <li class="page-item">
                                                <a class="page-link" @click="go(totalPage)" >&gt;&gt;</a>
                                            </li>
                                            </ul>
                                        </nav>
                                    </div>
                                </div>
                            </div>
                        </div>
                </div>
            </div>
            <%- include('footer') %>

        </div>
    </div>
    </div>
    <!-- Mainly scripts -->
    <script src="js/jquery-3.1.1.min.js"></script>
    <script src="js/popper.min.js"></script>
    <script src="js/bootstrap.min.js"></script>
    <script src="js/plugins/metisMenu/jquery.metisMenu.js"></script>
    <script src="js/plugins/slimscroll/jquery.slimscroll.min.js"></script>

    <!-- Custom and plugin javascript -->
    <script src="js/inspinia.js"></script>
    <script src="js/plugins/pace/pace.min.js"></script>
    <!-- axios -->
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <!-- vue  -->
    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>

    <script>
        const vm = new Vue({
            data: {
                title: '제품 리스트',
                product: [],
                totalPage: 0, // 전체 페이지의 개수
                currentPage: 1, // 현재 페이지
                pageCount: 1, // 이전, 다음에 사용될 변수 
                pageBlock: 5, // 한번에 보일 페이지의 개수
                perPage: 10, // 한 페이지당 보일 게시글의 개수
            },
            methods: {
                go(page) {
                    this.changePage(page);
                    if(page === 1) {
                        this.pageCount = 1;
                        this.currentPage = 1;
                    } else {
                        this.pageCount = Math.ceil(this.totalPage / this.pageBlock);
                        this.currentPage = this.totalPage;
                    }
                },
                changePage(page) {
                    (async () => {
                        try {
                            const offSet = page - 1;
                            const response = await axios.get(`/products/all/${ offSet }`);
                            const { code, message, products }  = response.data;

                            if(code === 200) {
                                const { count, rows } = products;
                                this.product = rows;
                                this.totalPage = Math.ceil(count / this.perPage);
                                this.currentPage = page;
                            } else {
                                alert(message);
                            }
                        } catch(err) {
                            console.log(err);
                        }
                    })();
                },
                incresePageCount() {
                    if((this.pageBlock * this.pageCount) === this.totalPage || (this.pageBlock * this.pageCount) > this.totalPage){
                       alert('마지막 페이지입니다.');
                       return false;
                    } 
                    this.currentPage = (this.pageBlock * this.pageCount) + 1;
                    this.pageCount++;
                    this.changePage(this.currentPage);
                },
                decreasePageCount() {
                    this.pageCount--;
                    this.currentPage = (this.pageBlock * this.pageCount);
                    this.changePage(this.currentPage);

                },
            },
            created() {
                (async () => {
                        try {
                            const result = await axios.get(`/products/all/${ this.totalPage }`)
                            const { code, message, products } = result.data;
                            const { count, rows }  = products;

                            if(code === 200) { 
                                this.product = rows; 
                                this.totalPage = Math.ceil(count / this.perPage);
                            } else {
                                alert(message);
                            }
                        } catch (err) {
                            console.log(err);
                        }
                    }
                )();
            }
        }).$mount('#vm');


    </script>
</body>

</html>