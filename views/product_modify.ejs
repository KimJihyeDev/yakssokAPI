<!DOCTYPE html>
<html>

<head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>제품 수정 & 삭제</title>

    <link href="css/bootstrap.min.css" rel="stylesheet">
    <link href="font-awesome/css/font-awesome.css" rel="stylesheet">
    <link href="css/animate.css" rel="stylesheet">
    <link href="css/style.css" rel="stylesheet">
    <link rel="stylesheet" href="css/v-cloak.css">

    <style>
        .is-visible {
            visibility: visible;
        }

        .not-visible {
            visibility: hidden;
        }
    </style>
</head>

<body>
    <div id="vm" v-cloak>
        <div id="wrapper">

            <%- include('navigation') %>

            <div id="page-wrapper" class="gray-bg ">
                <%- include('header') %>
                <div class="wrapper wrapper-content animated fadeInRight">
                    <div class="row">
                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="ibox ">
                                <div class="ibox-title">
                                    <h5>All form elements <small>With custom checbox and radion elements.</small></h5>
                                </div>
                                <div class="ibox-content">
                                    <form method="post" autocomplete="off" id="product-form">
                                        <div class="form-group  row"><label class="col-sm-2 col-form-label">제품명<span
                                                    class="text-danger">*</span></label>

                                            <div class="col-sm-10"><input type="text" class="form-control"
                                                    v-model="product.product_name" ref="product_name"></div>
                                        </div>
                                        <div class="hr-line-dashed"></div>
                                        <div class="form-group  row"><label class="col-sm-2 col-form-label">제품
                                                상세<span class="text-danger">*</span></label>
                                            <div class="col-sm-10"><textarea v-model="product.product_desc"
                                                    class="form-control " v-model="product.product_desc"
                                                    ref="product_desc"></textarea>
                                            </div>
                                        </div>
                                        <div class="hr-line-dashed"></div>
                                        <div class="form-group  row">
                                            <label class="col-sm-2 col-form-label">복용법<span
                                                    class="text-danger">*</span></label>
                                            <div class="col-sm-10"><textarea v-model="product.suggested_use"
                                                    class="form-control " v-model="product.suggested_use"
                                                    ref="suggested_use"></textarea>
                                            </div>
                                        </div>
                                        <div class="hr-line-dashed"></div>
                                        <div class="form-group row">
                                            <label class="col-sm-2 col-form-label">주의사항<span
                                                    class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-10"><textarea v-model="product.warnings"
                                                    class="form-control " v-model="product.warnings"
                                                    ref="warnings"></textarea></div>
                                        </div>
                                        <div class="hr-line-dashed"></div>
                                        <div class="form-group row">
                                            <label class="col-sm-2 col-form-label">기타성분<span
                                                    class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-10"><textarea v-model="product.other_ingredients"
                                                    class="form-control " v-model="product.other_ingredients"
                                                    ref="other_ingredients"></textarea>
                                            </div>
                                        </div>
                                        <div class="hr-line-dashed"></div>
                                        <div class="form-group row">
                                            <div class="col-sm-12">
                                                <div class="row">
                                                    <label class="col-sm-2 col-form-label">1회 제공량<span
                                                            class="text-danger">*</span>
                                                    </label>
                                                    <div class="col-md-4"><input type="text" placeholder="1회 제공량"
                                                            class="form-control " v-model="product.servings"
                                                            ref="servings">
                                                    </div>
                                                    <label class="col-sm-2 col-form-label">전체 제공량<span
                                                            class="text-danger">*</span>
                                                    </label>
                                                    <div class="col-md-4"><input type="number" placeholder="숫자만 적어주세요"
                                                            class="form-control" v-model="product.total_servings"
                                                            ref="total_servings"></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="hr-line-dashed"></div>
                                        <div class="form-group row">
                                            <label class="col-sm-2 col-form-label">1차 카테고리 선택<span
                                                    class="text-danger">*</span></label>

                                            <div class="col-sm-10">
                                                <label class="checkbox-inline i-checks">
                                                    <label class="i-checks">
                                                        <input type="radio" v-model="product.parent_category" value="1">
                                                        영양제
                                                    </label>
                                                    <label class="i-checks">
                                                        <input type="radio" v-model="product.parent_category" value="2">
                                                        동물 영양제
                                                    </label>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-sm-2 col-form-label">2차 카테고리 선택<span
                                                    class="text-danger">*</span>
                                            </label>

                                            <div class="col-sm-10">
                                                <div>
                                                    <label>
                                                        <input type="radio" v-model="product.child_category"
                                                            value="1">비타민
                                                    </label>
                                                </div>
                                                <div>
                                                    <label>
                                                        <input type="radio" v-model="product.child_category" value="2">
                                                        프로바이오틱스
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="hr-line-dashed"></div>
                                    </form>

                                    <h5 class="text-danger">이미지를 선택하지 않을 시에는 기존 이미지가 사용됩니다.</h5>
                                    <form enctype="multipart/form-data" ref="imageForm" id="file-form">
                                        <div class="form-group row">
                                            <label class="col-sm-2 col-form-label">
                                                제품 이미지<span class="text-danger">*</span>
                                            </label>
                                            <div class="col-sm-10"><input type="file" class="form-control"
                                                    accept="image/*" name="productImage" ref="product_image"></div>
                                        </div>
                                    </form>
                                    <div class="hr-line-dashed"></div>
                                    <div class="form-group row">
                                        <div class="col-sm-12 col-sm-offset-2 text-center">
                                            <button class="btn btn-danger btn-sm" type="button"
                                                @click="deleteProduct">삭제</button>
                                            <button class="btn btn-primary btn-sm" type="button"
                                                @click="modifyProduct">수정</button>
                                            <button class="btn btn-info btn-sm" type="button"
                                                onclick="location.href='/product_list'">목록</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <%- include('footer') %>
            </div>
        </div>
    </div>

    <!-- Mainly scripts -->
    <script src="js/jquery-3.1.1.min.js"></script>
    <script src="js/popper.min.js"></script>
    <script src="js/bootstrap.js"></script>
    <script src="js/plugins/metisMenu/jquery.metisMenu.js"></script>
    <script src="js/plugins/slimscroll/jquery.slimscroll.min.js"></script>
    <!-- vue  -->
    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
    <!-- axios -->
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>

    <!-- Custom and plugin javascript -->
    <script src="js/inspinia.js"></script>
    <script src="js/plugins/pace/pace.min.js"></script>

    <script>
        function getParameterByName(name) {
            name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
                results = regex.exec(location.search);
            return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
        }
        const param = getParameterByName('id');
        var vm = new Vue({
            data: {
                title: '제품 수정 & 삭제',
                count: 0,
                product: {
                },
                pictogramArr: [], // 서버로 부터 받은 전체 픽토그램 배열
                // pictograms: [], // 새로 선택한 픽토그램 배열
            },
            methods: {
                checkForm() {
                    const check = (name, ref) => {
                        alert(`${name} 입력해주세요`);
                        ref.focus();
                        return false;
                    }

                    if (!this.product.product_name) {
                        return check('제품이름을', this.$refs.product_name);
                    } else if (!this.product.product_desc) {
                        return check('제품상세를', this.$refs.product_desc);

                    } else if (!this.product.suggested_use) {
                        return check('복용법을', this.$refs.suggested_use);

                    } else if (!this.product.warnings) {
                        return check('주의사항을', this.$refs.warnings);

                    } else if (!this.product.other_ingredients) {
                        return check('기타성분을', this.$refs.other_ingredients);

                    } else if (!this.product.servings) {
                        return check('1회 제공량을', this.$refs.servings);

                    } else if (!this.product.total_servings) {
                        return check('전체제공량을', this.$refs.total_servings);

                    } else if (!this.product.parent_category) {
                        alert('1차 카테고리를 선택해 주세요');
                        return false;

                    } else if (!this.product.child_category) {
                        alert('2차 카테고리를 선택해 주세요');
                        return false;
                    }

                    // 성분 널값 체크
                    for (idx in this.product.ingredients) {
                        if (!this.product.ingredients[idx].ingredient) {
                            alert('성분명을 입력해 주세요.');
                            return false;
                        } else if (!this.product.ingredients[idx].per_serving) {
                            alert('함유량을 입력해 주세요');
                            return false;
                        }
                    }
                    // 이미지 파일 유효성 체크
                    const imgFile = this.$refs.product_image;
                    if (!imgFile.value) {
                        const fileForm = /(.*?)\.(jpg|jpeg|png|gif|bmp|jfif)$/;
                        const maxSize = 5 * 1024 * 1024;
                        let fileSize;

                        if (imgFile.value) {
                            // 확장자, 사이즈 체크
                            fileSize = imgFile.files[0].size;

                            if (!imgFile.value.match(fileForm)) {
                                alert("이미지 파일만 업로드 가능합니다.");
                                return false;
                            } else if (fileSize > maxSize) {
                                alert("파일 사이즈는 5MB까지 가능합니다.");
                                return false;
                            }
                        }
                    }

                    // 전부 다 통과했을 경우
                    return true;
                },
                modifyProduct() {
                    const check = this.checkForm();
                    if (!check) return false;

                    // 이미지를 변경하지 않았다면 파일 업로드 없이 상품정보만 변경
                    if (!this.$refs.product_image.value) {
                        (async () => {
                            try {
                                // 상품 등록 정보 수정 요청
                                result = await axios.patch(`/products/modify?id=${param}`, this.product);

                                const { code, message } = result.data;
                                if (code === 200) {
                                    alert('수정 성공');
                                    location.href = '/product_list';
                                } else {
                                    alert(message);
                                }
                            } catch (err) {
                                alert(result.data.message);
                                console.log(err);
                            }
                        })();
                    } else {
                        // 이미지를 수정한 경우
                        const form = this.$refs.imageForm;
                        const formData = new FormData(form);

                        (async () => {
                            try {
                                let result = await axios.post('/files/upload', formData);

                                if (result.data.code === 200) {
                                    let path = result.data.message;

                                    path = path.split('/') // production 코드(Linux)
                                    // path = path.split('\\') // 개발버전 코드드

                                    this.product.product_image = path[3];

                                    // 상품 등록 정보 수정 요청
                                    result = await axios.patch(`/products/modify?id=${param}`, this.product);
                                    const { code, message } = result.data;

                                    if (code === 200) {
                                        alert('수정하였습니다.');
                                        location.href = '/product_list';
                                    } else {
                                        alert(message);
                                    }
                                } else {
                                    alert(message);
                                }
                            } catch (err) {
                                console.log(err);
                            }
                        })();
                    }
                },
                increaseIngredient() {
                    let count = this.count;
                    if (count > 8) {
                        alert('성분은 최대 10개까지만 등록 가능합니다');
                        return false;
                    } else {
                        this.product.ingredients.push({ ingredient: '', per_serving: '', daily_value: '' });
                        this.count++; // 성분 입력창의 개수 증가
                    }
                },
                decreaseIngredient() {
                    let count = this.count;
                    if (count < 1) {
                        alert('성분은 최소 1개는 입력해야 합니다.');
                        return false;
                    } else {
                        this.product.ingredients.pop();
                        this.count--; // 성분 입력창의 개수 감소
                    }
                },
                deleteProduct() {
                    const reply = confirm('삭제하시겠습니까?');
                    if (reply) {
                        (async () => {
                            try {
                                const result = await axios.delete(`/products/delete?id=${param}`);

                                if (result.data.code === 200) {
                                    alert('삭제하였습니다');
                                    location.href = '/product_list';
                                } else {
                                    alert('삭제에 실패하였습니다. 다시 시도해 주세요.');
                                }
                            } catch (err) {
                                console.log(err);
                                alert(resutl.data.message);
                            }
                        })();
                    } else {
                        return false;
                    }
                }
            },
            created() {
                (async () => {
                    try {
                        const response = await axios.get(`/products/${param}`);

                        const { code, message, product } = response.data;

                        code === 200
                            ? this.product = product
                            : alert(message);

                        const pictograms = await axios.get('/pictograms');
                        this.pictogramArr = response.data;
                    } catch (err) {
                        console.log(err);
                    }
                })();
            },
        }).$mount('#vm');
    </script>
    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-162004565-1"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag() { dataLayer.push(arguments); }
        gtag('js', new Date());

        gtag('config', 'UA-162004565-1');
    </script>

</body>

</html>