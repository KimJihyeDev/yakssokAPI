<!DOCTYPE html>
<html>
  <head>
    <title></title>
    <link href="/css/bootstrap.min.css" rel="stylesheet">

  </head>
  <body>
  <form id="chatform">
    <div class="container">
        <div class="row">&nbsp;</div>
        <div class="row">
            <div class="col-2">User</div>
            <div class="col-4"><input type="text" id="userInput" /></div>
        </div>
        <div class="row">
            <div class="col-2">Message</div>
            <div class="col-4"><input type="text" id="messageInput" /></div>
        </div>
        <div class="row">&nbsp;</div>
        <div class="row">
            <div class="col-6">
                <input type="submit" id="sendButton" value="Send Message" />
            </div>
        </div>
    </div>
  </form>
  
  <div class="row">
      <div class="col-12">
          <hr />
      </div>
  </div>
  
  
  <div class="row">
      <div class="col-6">
          <ul id="messagesList"></ul>
      </div>
  </div>


  <script src="/js/jquery-3.1.1.min.js"></script>
  <script src="/js/bootstrap.js"></script>
  <!-- socket io 모듈 파일? 해당 경로에 파일이 안 보이는데? -->
  <script src="/socket.io/socket.io.js"></script>

  <script>
  //소켓연결
  var socket = io.connect();

  // 클라이언트 사이드

  //서버 브로드 캐스팅 메시징 수신처리
  // appendMessage함수를 호출하여 서버의 메시지를 브라우저에 출력
  socket.on('receivemsg', function(nick,message) {
    console.log('Client received message:',nick, message);
    appendMessage(nick,message);
  });


  // 서버로부터 받은 메시지를 브라우저에 출력하기
  //메시징 목록에 추가하기
  function appendMessage(nick,message){
    // replace를 사용한 정규식 처리 &amp는 <>를 처리하는 이스케이프 문자
    // var msg = message.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
    var msg = message.replace(/\\/g, '안녕');
    var encodedMsg = nick + " says " + msg;
    var li = document.createElement("li");
    li.textContent = encodedMsg;
    document.getElementById("messagesList").appendChild(li);
  }
  //서버 로깅 메시지 수신처리
  socket.on('log', function(array) {
    console.log.apply(console, array);
  });


  //전송버튼 클릭 이벤트
  // form 이 submit 이벤트를 일으킨다
  // User라고 써있는 input의 value가 nick으로
  // Message라고 써있는 input의 value가 message가 되어
  //  sendMessage함수를 호출(서버에 메시지 전송)
  // 전송 후 Message의 input 초기화 & 포커스
  $('#chatform').submit(function(){
    var nick = $('#userInput').val();
    var message = $('#messageInput').val();
    
    sendMessage(nick,message);
    $('#messageInput').val('');
    $('#messageInput').focus();
    return false;
  });
  
  // 채팅 메시징 서버 전송
  function sendMessage(nick,message) {
    console.log('Client sending message: ',nick, message);
    socket.emit('message',nick, message);
  }


  $( document ).ready(function() {
      $('#userInput').focus();
  });
  </script>

  </body>
</html>